<!DOCTYPE flight_plan SYSTEM "flight_plan.dtd">

<flight_plan alt="274" ground_alt="174" lat0="39.331935" lon0="-76.919524" home_mode_height="150" max_dist_from_home="700" name="Marriotsville" security_height="25">
  <header>
#include "subsystems/navigation/nav_line.h"
#include "subsystems/datalink/datalink.h"
#include "subsystems/navigation/OSAMNav.h"
#ifdef DC_AUTOSHOOT_QUARTERSEC_PERIOD
//#ifdef DC_AUTOSHOOT_GPS_DIST
#include "modules/digital_cam/dc.h"
#define LINE_START_FUNCTION dc_autoshoot = DC_AUTOSHOOT_PERIODIC;
//#define LINE_START_FUNCTION dc_Survey(dc_gps_dist);
#define LINE_STOP_FUNCTION dc_autoshoot = DC_AUTOSHOOT_STOP;
#endif
</header>
  <waypoints>
    <waypoint name="HOME" x="-25.2" y="-197.3"/>
    <waypoint name="STDBY" x="48.5" y="-121.7"/>
    <waypoint name="1" x="-283.3" y="-137.0"/>
    <waypoint name="2" x="321.5" y="-163.0"/>
    <waypoint name="MOB" x="90.2" y="-170.0"/>
    <waypoint name="S2" x="384.7" y="-402.3"/>
    <waypoint name="S1" x="-270.9" y="86.8"/>
    <waypoint name="_S2" x="170.9" y="16.3"/>
    <waypoint name="_S3" x="442.3" y="-263.9"/>
    <waypoint name="_S4" x="-1.6" y="-462.0"/>
    <waypoint name="_S5" x="-389.9" y="-322.4"/>
    <waypoint alt="184.0" name="AF" x="5.0" y="-127.5"/>
    <waypoint alt="174.0" name="TD" x="35.3" y="-9.1"/>
    <waypoint name="_BASELEG" x="161.6" y="-194.9"/>
    <waypoint name="CLIMB" x="-31.6" y="-117.8"/>
    <waypoint name="Z_CENTER" x="170" y="-90"/>
    <waypoint name="Z1_DIR" x="270" y="-120"/>
    <waypoint name="Z2_DIR" x="270" y="-120"/>
  </waypoints>
  <sectors>
    <sector name="PolySector">
      <corner name="S1"/>
      <corner name="_S2"/>
      <corner name="_S3"/>
      <corner name="_S4"/>
      <corner name="_S5"/>
    </sector>
  </sectors>
  <exceptions/>
  <blocks>
    <block name="Wait GPS">
      <set value="1" var="kill_throttle"/>
      <while cond="!GpsFixValid()"/>
    </block>
    <block name="Geo init">
      <while cond="LessThan(NavBlockTime(), 10)"/>
      <call fun="NavSetGroundReferenceHere()"/>
    </block>
    <block name="Holding point">
      <set value="1" var="kill_throttle"/>
      <attitude roll="0" throttle="0" vmode="throttle"/>
    </block>
    <block group="home" key="t" name="Takeoff" strip_button="Takeoff (wp CLIMB)" strip_icon="takeoff.png">
      <exception cond="GetPosAlt() > ground_alt+50" deroute="Standby"/>
      <set value="0" var="kill_throttle"/>
      <set value="0" var="autopilot_flight_time"/>
    <go from="HOME" pitch="20" throttle="0.8" vmode="throttle" wp="CLIMB"/>
    </block>
    <block group="home" key="R" name="AUTOTAKEOFF" strip_button="AutoTakeoff">
      <exception cond="GetPosAlt() > ground_alt+50" deroute="Standby"/>
      <set value="0" var="kill_throttle"/>
      <set value="0" var="autopilot_flight_time"/>
       <attitude pitch="25" roll="0" throttle="0.8" vmode="throttle"/> 
    </block>
    <block group="home" key="<Control>a" name="Standby" strip_button="Standby" strip_icon="home.png">
      <circle radius="nav_radius" wp="STDBY"/>
    </block>
    <block group="base_pattern" key="F8" name="Figure 8 around wp 1" strip_button="Figure 8 (wp 1-2)" strip_icon="eight.png">
      <eight center="1" radius="nav_radius" turn_around="2"/>
    </block>
    <block group="base_pattern" name="Oval 1-2" strip_button="Oval (wp 1-2)" strip_icon="oval.png">
      <oval p1="1" p2="2" radius="nav_radius"/>
    </block>
    <block group="base_pattern" name="ROLL TEST" strip_button="ROLL 30" strip_icon="circle.png">
      <attitude roll="30" alt="ground_alt+50"/>
    </block>
    <block group="base_pattern" name="MOB" strip_button="Turn around here" strip_icon="mob.png">
      <call fun="NavSetWaypointHere(WP_MOB)"/>
      <set value="DEFAULT_CIRCLE_RADIUS" var="nav_radius"/>
      <circle radius="nav_radius" wp="MOB"/>
    </block>
    <block group="extra_pattern" name="Line 1-2" strip_button="Line (wp 1-2)" strip_icon="line.png">
      <call fun="nav_line_init()"/>
      <call fun="nav_line(WP_1, WP_2, nav_radius)"/>
    </block>
    <block group="base_pattern" name="Straight flight" strip_button="Straight flight" strip_icon="line.png">
     <attitude roll="0" vmode="throttle" throttle="0.5"/>
    </block>
    <block group="extra_pattern" name="Survey S1-S2" strip_button="Survey (wp S1-S2)" strip_icon="survey.png">
      <survey_rectangle grid="75" wp1="S1" wp2="S2"/>
    </block>
    <block name="ZamboniSurvey1" strip_button="Zamboni1" strip_icon="survey.png">
      <call fun="init_zamboni_survey(WP_Z_CENTER, WP_Z1_DIR, 200, 40, 7, 290)"/>
      <call fun="zamboni_survey()"/>
    </block>
    <block name="ZamboniSurvey2" strip_button="Zamboni2" strip_icon="survey.png">
      <call fun="init_zamboni_survey(WP_Z_CENTER, WP_Z2_DIR, 200, -40, 7, 290)"/>
      <call fun="zamboni_survey()"/>
    </block>
    <block group="extra_pattern" name="Poly Survey" strip_button="Survey" strip_icon="survey.png">
      <call fun="InitializePolygonSurvey(WP_S1, 5, 75, 20)"/>
      <call fun="PolygonSurvey()"/>
    </block>
    <block group="extra_pattern" name="Path 1,2,S1,S2,STDBY" strip_button="Path (1,2,S1,S2,STDBY)" strip_icon="path.png">
      <path wpts="1,2 S1"/>
      <path approaching_time="1" pitch="auto" throttle="0.4" wpts="S1, S2 STDBY"/>
      <deroute block="Standby"/>
    </block>
    <block group="land" name="Land Right AF-TD" strip_button="Land right (wp AF-TD)" strip_icon="land-right.png">
      <set value="DEFAULT_CIRCLE_RADIUS" var="nav_radius"/>
      <deroute block="land"/>
    </block>
    <block group="land" name="Land Left AF-TD" strip_button="Land left (wp AF-TD)" strip_icon="land-left.png">
      <set value="-DEFAULT_CIRCLE_RADIUS" var="nav_radius"/>
      <deroute block="land"/>
    </block>
    <block name="land">
      <call fun="nav_compute_baseleg(WP_AF, WP_TD, WP__BASELEG, nav_radius)"/>
      <circle radius="nav_radius" until="NavCircleCount() > 0.5" wp="_BASELEG"/>
      <circle radius="nav_radius" until="And(NavQdrCloseTo(DegOfRad(baseleg_out_qdr)-(nav_radius/fabs(nav_radius))*10), 10 > fabs(GetPosAlt() - WaypointAlt(WP__BASELEG)))" wp="_BASELEG"/>
    </block>
    <block name="final">
      <exception cond="ground_alt + 10 > GetPosAlt()" deroute="flare"/>
      <go from="AF" hmode="route" vmode="glide" wp="TD"/>
    </block>
    <block name="flare">
      <go approaching_time="0" from="AF" hmode="route" throttle="0.0" vmode="throttle" wp="TD"/>
      <attitude roll="0.0" throttle="0.0" until="FALSE" vmode="throttle"/>
    </block>
  </blocks>
</flight_plan>
